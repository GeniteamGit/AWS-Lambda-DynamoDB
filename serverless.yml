service: xxx

provider:
  name: aws
  runtime: nodejs12.x
  region: xxx
  timeout: 300
  versionFunctions: false
  environment:
    stage: live
  Globals:
  Function:
    Timeout: 300

functions:
  assemblaRoutine:
    handler: controllers/routine.assemblaRoutine
    events:
      - http:
          path: /assemblaRoutine
          method: post
          cors: true

  assemblaTasksRoutine:
    handler: controllers/routine.assemblaTasksRoutine
    events:
      - http:
          path: /assemblaTasksRoutine
          method: get
          cors: true

  assemblaUsersAndSPacesRoutine:
    handler: controllers/routine.assemblaUsersAndSPaces
    events:
      - http:
          path: /assemblaUsersAndSPaces
          method: get
          cors: true
  userLogin:
    handler: controllers/user.userLogin
    events:
      - http:
          path: /userLogin
          method: post
          cors: true
  workspaceAllDetails:
    handler: controllers/workspace.workspaceAllDetails
    events:
      - http:
          path: /workspaceAllDetails
          method: post
          cors: true
  getUserSpaces:
    handler: controllers/user.getUserSpaces
    events:
      - http:
          path: /getUserSpaces
          method: post
          cors: true
  registration:
    handler: controllers/user.registration
    events:
      - http:
          path: /registration
          method: post
          cors: true
  streamRoutine:
    handler: controllers/stream.streamRoutine
    events:
      - http:
          path: /streamRoutine
          method: post
  getStream:
    handler: controllers/stream.getStream
    events:
      - http:
          path: /getStream
          method: post
          cors: true
  getUserStatus:
    handler: controllers/user.getUserStatus
    events:
      - http:
          path: /getUserStatus
          method: post
          cors: true
  getUserTaskAndStandUPDetails:
    handler: controllers/user.getUserTaskAndStandUPDetails
    events:
      - http:
          path: /getUserTaskAndStandUPDetails
          method: post
          cors: true
  getAllUsers:
    handler: controllers/user.getAllUsers
    events:
      - http:
          path: /getAllUsers
          method: get
          cors: true
  deleteUser:
    handler: controllers/user.deleteUser
    events:
      - http:
          path: /deleteUser
          method: post
          cors: true
  assignWordSpacesToUser:
    handler: controllers/user.assignWordSpacesToUser
    events:
      - http:
          path: /assignWordSpacesToUser
          method: post
          cors: true
  updateUser:
    handler: controllers/user.updateUser
    events:
      - http:
          path: /updateUser
          method: post
          cors: true
  getUsersTaskAndStandUp:
    handler: controllers/user.getUsersTaskAndStandUp
    events:
      - http:
          path: /getUsersTaskAndStandUp
          method: post
          cors: true
  getUsersTaskAndUsers:
    handler: controllers/user.getUsersTaskAndUsers
    events:
      - http:
          path: /getUsersTaskAndUsers
          method: post
          cors: true
  resetUsersStatusRoutuneNew:
    handler: controllers/routine.resetUsersStatusRoutune
    events:
      - http:
          path: /resetUsersStatusRoutune
          method: get
          cors: true
  getUsersAndStandUp:
    handler: controllers/user.getUsersAndStandUp
    events:
      - http:
          path: /getUsersAndStandUp
          method: post
          cors: true
  getUserStandUpTasks:
    handler: controllers/user.getUserStandUpTasks
    events:
      - http:
          path: /getUserStandUpTasks
          method: post
          cors: true
  sendRemainderEmail:
    handler: controllers/user.sendRemainderEmail
    events:
      - http:
          path: /sendRemainderEmail
          method: post
          cors: true
  addLeave:
    handler: controllers/user.addLeave
    events:
      - http:
          path: /addLeave
          method: post
          cors: true
  listOfAllLeave:
    handler: controllers/user.listOfAllLeave
    events:
      - http:
          path: /listOfAllLeave
          method: post
          cors: true
  reportRoutine:
    handler: controllers/routine.reportRoutine
    events:
      - http:
          path: /reportRoutine
          method: get
          cors: true
  addStandUp:
    handler: controllers/user.addStandUp
    events:
      - http:
          path: /addStandUp
          method: post
          cors: true
  addTask:
    handler: controllers/user.addTask
    events:
      - http:
          path: /addTask
          method: post
          cors: true
  getUsersByLeadId:
    handler: controllers/user.getUsersByLeadId
    events:
      - http:
          path: /getUsersByLeadId
          method: post
          cors: true
  addUserScore:
    handler: controllers/scores.addUserScore
    events:
      - http:
          path: /addUserScore
          method: post
          cors: true
  getScoreByUserId:
    handler: controllers/scores.getScoreByUserId
    events:
      - http:
          path: /getScoreByUserId
          method: post
          cors: true
  getUsersScoresByLeadId:
    handler: controllers/scores.getUsersScoresByLeadId
    events:
      - http:
          path: /getUsersScoresByLeadId
          method: post
          cors: true
  editUserScore:
    handler: controllers/scores.editUserScore
    events:
      - http:
          path: /editUserScore
          method: post
          cors: true
  getAllScores:
    handler: controllers/scores.getAllScores
    events:
      - http:
          path: /getAllScores
          method: post
          cors: true
  getScoresbyLead:
    handler: controllers/scores.getScoresbyLead
    events:
      - http:
          path: /getScoresbyLead
          method: post
          cors: true
  addWorkSpace:
    handler: controllers/workspace.addWorkSpace
    events:
      - http:
          path: /addWorkSpace
          method: post
          cors: true
  editWorkSpace:
    handler: controllers/workspace.editWorkSpace
    events:
      - http:
          path: /editWorkSpace
          method: put
          cors: true
  deleteWorkSpace:
    handler: controllers/workspace.deleteWorkSpace
    events:
      - http:
          path: /deleteWorkSpace
          method: post
          cors: true
  getAllSpaces:
    handler: controllers/workspace.getAllSpaces
    events:
      - http:
          path: /getAllSpaces
          method: get
          cors: true
  getSpace:
    handler: controllers/workspace.getSpace
    events:
      - http:
          path: /getSpace
          method: post
          cors: true
  addMilestone:
    handler: controllers/workspace.addMilestone
    events:
      - http:
          path: /addMilestone
          method: post
          cors: true
  syncMilestonesOfSpace:
    handler: controllers/workspace.syncMilestonesOfSpace
    events:
      - http:
          path: /syncMilestonesOfSpace
          method: post
          cors: true
  getMilestone:
    handler: controllers/workspace.getMilestone
    events:
      - http:
          path: /getMilestone
          method: post
          cors: true
  getAllMilestones:
    handler: controllers/workspace.getAllMilestones
    events:
      - http:
          path: /getAllMilestones
          method: post
          cors: true
  getAllMilestonesOfSpace:
    handler: controllers/workspace.getAllMilestonesOfSpace
    events:
      - http:
          path: /getAllMilestonesOfSpace
          method: post
          cors: true
  getMilestoneDetail:
    handler: controllers/workspace.getMilestoneDetail
    events:
      - http:
          path: /getMilestoneDetail
          method: post
          cors: true
  editMilestone:
    handler: controllers/workspace.editMilestone
    events:
      - http:
          path: /editMilestone
          method: put
          cors: true
  addUserToWorkSpace:
    handler: controllers/user.addUserToWorkSpace
    events:
      - http:
          path: /addUserToWorkSpace
          method: post
          cors: true
  getSpaceUsersList:
    handler: controllers/user.getSpaceUsersList
    events:
      - http:
          path: /getSpaceUsersList
          method: post
          cors: true
  updateSpaceData:
    handler: controllers/user.updateSpaceData
    events:
      - http:
          path: /updateSpaceData
          method: post
          cors: true
  deleteUserForever:
    handler: controllers/user.deleteUserForever
    events:
      - http:
          path: /deleteUserForever
          method: post
          cors: true
  updateProfile:
    handler: controllers/user.updateProfile
    events:
      - http:
          path: /updateProfile
          method: post
          cors: true
  #  getUsersTaskAndStandUps:
  #    handler: controllers/user.getUsersTaskAndStandUps
  #    events:
  #      - http:
  #          path: /getUsersTaskAndStandUps
  #          method: post
  #          cors: true

  getUserTasksAndUser:
    handler: controllers/user.getUserTasksAndUser
    events:
      - http:
          path: /getUserTasksAndUser
          method: post
          cors: true

  getUserTasksAndStandUp:
    handler: controllers/user.getUserTasksAndStandUp
    events:
      - http:
          path: /getUserTasksAndStandUp
          method: post
          cors: true

  getWorkspaceIdsByName:
    handler: controllers/user.getWorkspaceIdsByName
    events:
      - http:
          path: /getWorkspaceIdsByName
          method: post
          cors: true

  sendScoreReminder:
    handler: controllers/user.sendScoreReminder
    events:
      - http:
          path: /sendScoreReminder
          method: post
          cors: true
  approveScores:
    handler: controllers/scores.approveScores
    events:
      - http:
          path: /approveScores
          method: post
          cors: true
  addTemplate:
    handler: controllers/templates.addTemplate
    events:
      - http:
          path: /addTemplate
          method: post
          cors: true
  getAllTemplate:
    handler: controllers/templates.getAllTemplate
    events:
      - http:
          path: /getAllTemplate
          method: get
          cors: true
  editTemplate:
    handler: controllers/templates.editTemplate
    events:
      - http:
          path: /editTemplate
          method: post
          cors: trues
  deleteTemplates:
    handler: controllers/templates.deleteTemplates
    events:
      - http:
          path: /deleteTemplates
          method: post
          cors: true
  addTeam:
    handler: controllers/teams.addTeam
    events:
      - http:
          path: /addTeam
          method: post
          cors: trues
  getAllTeams:
    handler: controllers/teams.getAllTeams
    events:
      - http:
          path: /getAllTeams
          method: get
          cors: true
  editTeam:
    handler: controllers/teams.editTeam
    events:
      - http:
          path: /editTeam
          method: put
          cors: true
  deleteTeam:
    handler: controllers/teams.deleteTeam
    events:
      - http:
          path: /deleteTeam
          method: post
          cors: true

# websockets -- End
plugins:
  #  - serverless-sequelize-migrations
  - serverless-offline
  - serverless-prune-plugin

package:
  excludeDevDependencies: true

custom:
  serverless-offline:
    host: "0.0.0.0"
  prune:
    automatic: true
    number: 2
